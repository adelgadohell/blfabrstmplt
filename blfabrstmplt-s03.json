{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Virtual Machine."
      }
    },
    "vmName": {
      "type": "string",
      "defaultValue": "abrsbb03",
      "metadata": {
        "description": "Name for the Virtual Machine."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "authenticationType": {
      "type": "string",
      "defaultValue": "sshPublicKey",
      "allowedValues": [
        "sshPublicKey",
        "password"
      ],
      "metadata": {
        "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
      }
    },
    "adminPasswordOrKey": {
      "type": "securestring",
      "metadata": {
        "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
      }
    },
    "dnsLabelPrefix": {
      "type": "string",
      "defaultValue": "[concat(parameters('vmName'), uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
      }
    },
    "customData": {
      "type": "string",
      "defaultValue": "IyEvYmluL2Jhc2gKZGF0ZSA+IC90bXAvYmxmYWJyc3RtcGx0LXMwMy50eHQKZWNobyBDaGFuZ2Ugc3NoZCBwb3J0IGNvbmZpZ3VyYXRpb24gPj4gL3RtcC9ibGZhYnJzdG1wbHQtczAzLnR4dApzZWQgLUVpICdzL14jPyhbWzpzcGFjZTpdXT8pK1BvcnQoW1s6c3BhY2U6XV0/MjIoW1s6c3BhY2U6XV0/KSspKyQvUG9ydCAyMjIyICMgTW9kaWZpZWQgYnkgYXV0b21hdGlvbi8nIC9ldGMvc3NoL3NzaGRfY29uZmlnIDI+JjEgPj4gIC90bXAvYmxmYWJyc3RtcGx0LXMwMy50eHQKCmVjaG8gQWRkIFRDUCBwb3J0IDIyMjIgdG8gU0VMaW51eCA+PiAvdG1wL2JsZmFicnN0bXBsdC1zMDMudHh0CnNlbWFuYWdlIHBvcnQgLWEgLXQgc3NoX3BvcnRfdCAtcCB0Y3AgMjIyMiA+PiAvdG1wL2JsZmFicnN0bXBsdC1zMDMudHh0CgplY2hvIEFkZCBmaXJld2FsbCBzc2ggcG9ydCA+PiAvdG1wL2JsZmFicnN0bXBsdC1zMDMudHh0CnN5c3RlbWN0bCBzdG9wIGZpcmV3YWxsZCA+PiAvdG1wL2JsZmFicnN0bXBsdC1zMDMudHh0CnNsZWVwIDUKZmlyZXdhbGwtb2ZmbGluZS1jbWQgLS1hZGQtcG9ydD0yMjIyL3RjcCA+PiAvdG1wL2JsZmFicnN0bXBsdC1zMDMudHh0CnNsZWVwIDUKc3lzdGVtY3RsIHN0YXJ0IGZpcmV3YWxsZCA+PiAvdG1wL2JsZmFicnN0bXBsdC1zMDMudHh0CgplY2hvIFJlc3RhcnQgc3NoID4+IC90bXAvYmxmYWJyc3RtcGx0LXMwMy50eHQKc3lzdGVtY3RsIHJlc3RhcnQgc3NoZCA+PiAvdG1wL2JsZmFicnN0bXBsdC1zMDMudHh0CgpkYXRlID4+IC90bXAvYmxmYWJyc3RtcGx0LXMwMy50eHQ=",
      "metadata": {
        "description": "base64 content for cloud-init custom data"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_B2s",
      "metadata": {
        "description": "Size of the virtual machine"
      }
    },
    "storageAccounts_aztrial_name": {
      "defaultValue": "[concat('stor', uniqueString(resourceGroup().id))]",
      "type": "String"
    }
  },
  "variables": {
    "dataDisk1Name": "[concat(uniquestring(parameters('vmName')), 'datadisk1')]",
    "dataDisk2Name": "[concat(uniquestring(parameters('vmName')), 'datadisk2')]",
    "imagePublisher": "RedHat",
    "imageOffer": "RHEL",
    "imageSku": "7_9",
    "nicName": "[concat(uniquestring(parameters('vmName')), 'nic')]",
    "addressPrefix": "10.0.0.0/16",
    "subnetName": "Subnet",
    "subnetPrefix": "10.0.0.0/24",
    "publicIPAddressName": "[concat(uniquestring(parameters('vmName')), 'publicip')]",
    "publicIPAddressType": "Dynamic",
    "virtualNetworkName": "[concat(uniquestring(parameters('vmName')), 'vnet')]",
    "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]",
    "linuxConfiguration": {
      "disablePasswordAuthentication": true,
      "ssh": {
        "publicKeys": [
          {
            "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
            "keyData": "[parameters('adminPasswordOrKey')]"
          }
        ]
      }
    },
    "networkSecurityGroupName": "default-NSG"
  },
  "resources": [
    {
      "apiVersion": "2020-05-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[parameters('location')]",
      "properties": {
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsLabelPrefix')]"
        },
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]"
      }
    },
    {
      "comments": "Default Network Security Group for template",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2020-05-01",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "inbound_ssh",
            "properties": {
              "access": "Allow",
              "description": "Inbound SSH access to port 2222 and 22.",
              "destinationAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefixes": [],
              "destinationApplicationSecurityGroups": null,
              "destinationPortRange": "2222",
              "destinationPortRanges": [],
              "direction": "Inbound",
              "priority": 100,
              "Protocol": "TCP",
              "sourceAddressPrefix": "Internet",
              "sourceAddressPrefixes": [],
              "sourceApplicationSecurityGroups": null,
              "sourcePortRange": "*",
              "sourcePortRanges": []
            }
          },
          {
            "name": "CASG-Rule-104",
            "properties": {
              "access": "Deny",
              "description": "CSS Governance Security Rule.  Deny risky inbound.  https://aka.ms/casg",
              "destinationAddressPrefix": "*",
              "destinationAddressPrefixes": [],
              "destinationApplicationSecurityGroups": null,
              "destinationPortRange": null,
              "destinationPortRanges": [
                "13",
                "17",
                "19",
                "22",
                "23",
                "53",
                "69",
                "111",
                "119",
                "123",
                "135",
                "137",
                "138",
                "139",
                "161",
                "162",
                "389",
                "445",
                "512",
                "514",
                "593",
                "636",
                "873",
                "1433",
                "1434",
                "1900",
                "2049",
                "2301",
                "2381",
                "3268",
                "3306",
                "3389",
                "4333",
                "5353",
                "5432",
                "5800",
                "5900",
                "5985",
                "5986",
                "6379",
                "7000",
                "7001",
                "7199",
                "9042",
                "9160",
                "9300",
                "11211",
                "16379",
                "26379",
                "27017"
              ],
              "direction": "Inbound",
              "priority": 204,
              "protocol": "*",
              "sourceAddressPrefix": "Internet",
              "sourceAddressPrefixes": [],
              "sourceApplicationSecurityGroups": null,
              "sourcePortRange": "*",
              "sourcePortRanges": []
            }
          },
          {
            "name": "CASG-Rule-103",
            "properties": {
              "access": "Allow",
              "description": "CSS Governance Security Rule.  Allow SAW inbound.  https://aka.ms/casg",
              "destinationAddressPrefix": "*",
              "destinationAddressPrefixes": [],
              "destinationApplicationSecurityGroups": null,
              "destinationPortRange": "*",
              "destinationPortRanges": [],
              "direction": "Inbound",
              "priority": 103,
              "protocol": "*",
              "provisioningState": "Succeeded",
              "sourceAddressPrefix": "CorpNetSaw",
              "sourceAddressPrefixes": [],
              "sourceApplicationSecurityGroups": null,
              "sourcePortRange": "*",
              "sourcePortRanges": []
            }
          },
          {
            "name": "CASG-Rule-101",
            "properties": {
              "access": "Allow",
              "description": "CSS Governance Security Rule.  Allow vnet inbound.  https://aka.ms/casg",
              "destinationAddressPrefix": "*",
              "destinationAddressPrefixes": [],
              "destinationApplicationSecurityGroups": null,
              "destinationPortRange": "*",
              "destinationPortRanges": [],
              "direction": "Inbound",
              "priority": 101,
              "protocol": "*",
              "provisioningState": "Succeeded",
              "sourceAddressPrefix": "VirtualNetwork",
              "sourceAddressPrefixes": [],
              "sourceApplicationSecurityGroups": null,
              "sourcePortRange": "*",
              "sourcePortRanges": []
            }
          },
          {
            "name": "CASG-Rule-102",
            "properties": {
              "access": "Allow",
              "description": "CSS Governance Security Rule.  Allow Corpnet inbound.  https://aka.ms/casg",
              "destinationAddressPrefix": "*",
              "destinationAddressPrefixes": [],
              "destinationApplicationSecurityGroups": null,
              "destinationPortRange": "*",
              "destinationPortRanges": [],
              "direction": "Inbound",
              "priority": 102,
              "protocol": "*",
              "provisioningState": "Succeeded",
              "sourceAddressPrefix": "CorpNetPublic",
              "sourceAddressPrefixes": [],
              "sourceApplicationSecurityGroups": null,
              "sourcePortRange": "*",
              "sourcePortRanges": []
            }
          },
          {
            "name": "inbound_web",
            "properties": {
              "access": "Allow",
              "description": "Inbound HTTP and HTTPS from home.",
              "destinationAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefixes": [],
              "destinationApplicationSecurityGroups": null,
              "destinationPortRange": null,
              "destinationPortRanges": [
                "8080",
                "8443"
              ],
              "direction": "Inbound",
              "priority": 104,
              "protocol": "TCP",
              "provisioningState": "Succeeded",
              "sourceAddressPrefix": "Internet",
              "sourceAddressPrefixes": [],
              "sourceApplicationSecurityGroups": null,
              "sourcePortRange": "*",
              "sourcePortRanges": []
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2020-05-01",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2020-05-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2020-06-01",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[parameters('vmName')]",
      "location": "[parameters('location')]",
      "tags": {
        "Tag1": "ManagedVM"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "adminPassword": "[parameters('adminPasswordOrKey')]",
          "adminUsername": "[parameters('adminUsername')]",
          "computerName": "[parameters('vmName')]",
          "customData": "[parameters('customData')]",
          "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', parameters('storageAccounts_aztrial_name'))).primaryEndpoints.blob]"
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "latest"
          },
          "dataDisks": [
            {
              "name": "[variables('dataDisk1Name')]",
              "diskSizeGB": 10,
              "lun": 0,
              "createOption": "Empty"
            },
            {
              "name": "[variables('dataDisk2Name')]",
              "diskSizeGB": 15,
              "lun": 1,
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
            }
          ]
        }
      }
    },
    {
      "name": "[parameters('storageAccounts_aztrial_name')]",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-06-01",
      "tags": {
        "displayName": "[parameters('storageAccounts_aztrial_name')]"
      },
      "location": "[resourceGroup().location]",
      "kind": "StorageV2",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      }
    }
  ],
  "outputs": {
    "adminUsername": {
      "type": "string",
      "value": "[parameters('adminUsername')]"
    },
    "hostname": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))).dnsSettings.fqdn]"
    },
    "sshCommand": {
      "type": "string",
      "value": "[format('ssh {0}@{1} -p 2222', parameters('adminUsername'), reference(resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))).dnsSettings.fqdn)]"
    }
  }
}
