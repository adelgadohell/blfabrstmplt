{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "adminUsername": {
        "type": "string",
        "defaultValue": "azureuser",
        "metadata": {
          "description": "User name for the Virtual Machine."
        }
      },
      "vm1Name": {
        "type": "string",
        "defaultValue": "lab-abrsvm1session08",
        "metadata": {
          "description": "Name for the Virtual Machine 1"
        }
      },
      "vm2Name": {
        "type": "string",
        "defaultValue": "lab-abrsvm2session08",
        "metadata": {
          "description": "Name for the Virtual Machine 2"
        }
      },  
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      },
      "authenticationType": {
        "type": "string",
        "defaultValue": "sshPublicKey",
        "allowedValues": [
          "sshPublicKey",
          "password"
        ],
        "metadata": {
          "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
        }
      },
      "adminPasswordOrKey": {
        "type": "securestring",
        "metadata": {
          "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
        }
      },
      "dnsLabelPrefixVM1": {
        "type": "string",
        "defaultValue": "[concat(parameters('vm1Name'), uniqueString(resourceGroup().id))]",
        "metadata": {
          "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
        }
      },
      "dnsLabelPrefixVM2": {
        "type": "string",
        "defaultValue": "[concat(parameters('vm2Name'), uniqueString(resourceGroup().id))]",
        "metadata": {
          "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
        }
      },
      "customData1": {
        "type": "string",
        "defaultValue": "IyEvYmluL2Jhc2gKZGF0ZSA+IC90bXAvbGFiLWFicnN2bTFzZXNzaW9uMDgudHh0CmVjaG8gQ2hhbmdlIHNzaGQgcG9ydCBjb25maWd1cmF0aW9uID4+IC90bXAvbGFiLWFicnN2bTFzZXNzaW9uMDgudHh0CnNlZCAtRWkgJ3MvXiM/KFtbOnNwYWNlOl1dPykrUG9ydChbWzpzcGFjZTpdXT8yMihbWzpzcGFjZTpdXT8pKykrJC9Qb3J0IDIyMjIgIyBNb2RpZmllZCBieSBhdXRvbWF0aW9uLycgL2V0Yy9zc2gvc3NoZF9jb25maWcgMj4mMSA+PiAgL3RtcC9sYWItYWJyc3ZtMXNlc3Npb24wOC50eHQKCmVjaG8gQWRkIFRDUCBwb3J0IDIyMjIgdG8gU0VMaW51eCA+PiAvdG1wL2xhYi1hYnJzdm0xc2Vzc2lvbjA4LnR4dApzZW1hbmFnZSBwb3J0IC1hIC10IHNzaF9wb3J0X3QgLXAgdGNwIDIyMjIgPj4gL3RtcC9sYWItYWJyc3ZtMXNlc3Npb24wOC50eHQKCmVjaG8gQWRkIGZpcmV3YWxsIHNzaCBwb3J0ID4+IC90bXAvbGFiLWFicnN2bTFzZXNzaW9uMDgudHh0CnN5c3RlbWN0bCBzdG9wIGZpcmV3YWxsZCA+PiAvdG1wL2xhYi1hYnJzdm0xc2Vzc2lvbjA4LnR4dApzbGVlcCA1CmZpcmV3YWxsLW9mZmxpbmUtY21kIC0tYWRkLXBvcnQ9MjIyMi90Y3AgPj4gL3RtcC9sYWItYWJyc3ZtMXNlc3Npb24wOC50eHQKc2xlZXAgNQpzeXN0ZW1jdGwgc3RhcnQgZmlyZXdhbGxkID4+IC90bXAvbGFiLWFicnN2bTFzZXNzaW9uMDgudHh0CgplY2hvIFJlc3RhcnQgc3NoID4+IC90bXAvbGFiLWFicnN2bTFzZXNzaW9uMDgudHh0CnN5c3RlbWN0bCByZXN0YXJ0IHNzaGQgPj4gL3RtcC9sYWItYWJyc3ZtMXNlc3Npb24wOC50eHQKCmRhdGUgPj4gL3RtcC9sYWItYWJyc3ZtMXNlc3Npb24wOC50eHQKCmVjaG8gIltVbml0XSIgPj4gL2V0Yy9zeXN0ZW1kL3N5c3RlbS92ZXJ5LWxhc3Quc2VydmljZQplY2hvICJEZXNjcmlwdGlvbj1WZXJ5IGxhc3Qgc2VydmljZSIgPj4gL2V0Yy9zeXN0ZW1kL3N5c3RlbS92ZXJ5LWxhc3Quc2VydmljZQplY2hvICJBZnRlcj1kZWZhdWx0LnRhcmdldCIgPj4gL2V0Yy9zeXN0ZW1kL3N5c3RlbS92ZXJ5LWxhc3Quc2VydmljZQplY2hvICIgIiA+PiAvZXRjL3N5c3RlbWQvc3lzdGVtL3ZlcnktbGFzdC5zZXJ2aWNlCmVjaG8gIltTZXJ2aWNlXSIgPj4gL2V0Yy9zeXN0ZW1kL3N5c3RlbS92ZXJ5LWxhc3Quc2VydmljZQplY2hvICJUeXBlPW9uZXNob3QiID4+IC9ldGMvc3lzdGVtZC9zeXN0ZW0vdmVyeS1sYXN0LnNlcnZpY2UKZWNobyAiRXhlY1N0YXJ0PS91c3IvbG9jYWwvc2Jpbi92ZXJ5LWxhc3QiID4+IC9ldGMvc3lzdGVtZC9zeXN0ZW0vdmVyeS1sYXN0LnNlcnZpY2UKZWNobyAiICIgPj4gL2V0Yy9zeXN0ZW1kL3N5c3RlbS92ZXJ5LWxhc3Quc2VydmljZQplY2hvICJbSW5zdGFsbF0iID4+IC9ldGMvc3lzdGVtZC9zeXN0ZW0vdmVyeS1sYXN0LnNlcnZpY2UKZWNobyAiV2FudGVkQnk9ZGVmYXVsdC50YXJnZXQiID4+IC9ldGMvc3lzdGVtZC9zeXN0ZW0vdmVyeS1sYXN0LnNlcnZpY2UKCnN5c3RlbWN0bCBkYWVtb24tcmVsb2FkCnN5c3RlbWN0bCBlbmFibGUgdmVyeS1sYXN0CmVjaG8gJyMhL2Jpbi9iYXNoJyA+PiAvdXNyL2xvY2FsL3NiaW4vdmVyeS1sYXN0CmVjaG8gJ3B5dGhvbiAtbSBTaW1wbGVIVFRQU2VydmVyJyA+PiAvdXNyL2xvY2FsL3NiaW4vdmVyeS1sYXN0CmNobW9kIDcwMCAvdXNyL2xvY2FsL3NiaW4vdmVyeS1sYXN0CnN5c3RlbWN0bCBzdGFydCB2ZXJ5LWxhc3Q=",
        "metadata": {
          "description": "base64 content for cloud-init custom data"
        }
      },
      "customData2": {
        "type": "string",
        "defaultValue": "IyEvYmluL2Jhc2gKZGF0ZSA+IC90bXAvbGFiLWFicnN2bTJzZXNzaW9uMDgudHh0CmVjaG8gQ2hhbmdlIHNzaGQgcG9ydCBjb25maWd1cmF0aW9uID4+IC90bXAvbGFiLWFicnN2bTJzZXNzaW9uMDgudHh0CnNlZCAtRWkgJ3MvXiM/KFtbOnNwYWNlOl1dPykrUG9ydChbWzpzcGFjZTpdXT8yMihbWzpzcGFjZTpdXT8pKykrJC9Qb3J0IDIyMjIgIyBNb2RpZmllZCBieSBhdXRvbWF0aW9uLycgL2V0Yy9zc2gvc3NoZF9jb25maWcgMj4mMSA+PiAgL3RtcC9sYWItYWJyc3ZtMnNlc3Npb24wOC50eHQKCmVjaG8gQWRkIFRDUCBwb3J0IDIyMjIgdG8gU0VMaW51eCA+PiAvdG1wL2xhYi1hYnJzdm0yc2Vzc2lvbjA4LnR4dApzZW1hbmFnZSBwb3J0IC1hIC10IHNzaF9wb3J0X3QgLXAgdGNwIDIyMjIgPj4gL3RtcC9sYWItYWJyc3ZtMnNlc3Npb24wOC50eHQKCmVjaG8gQWRkIGZpcmV3YWxsIHNzaCBwb3J0ID4+IC90bXAvbGFiLWFicnN2bTJzZXNzaW9uMDgudHh0CnN5c3RlbWN0bCBzdG9wIGZpcmV3YWxsZCA+PiAvdG1wL2xhYi1hYnJzdm0yc2Vzc2lvbjA4LnR4dApzbGVlcCA1CmZpcmV3YWxsLW9mZmxpbmUtY21kIC0tYWRkLXBvcnQ9MjIyMi90Y3AgPj4gL3RtcC9sYWItYWJyc3ZtMnNlc3Npb24wOC50eHQKc2xlZXAgNQpzeXN0ZW1jdGwgc3RhcnQgZmlyZXdhbGxkID4+IC90bXAvbGFiLWFicnN2bTJzZXNzaW9uMDgudHh0CgplY2hvIFJlc3RhcnQgc3NoID4+IC90bXAvbGFiLWFicnN2bTJzZXNzaW9uMDgudHh0CnN5c3RlbWN0bCByZXN0YXJ0IHNzaGQgPj4gL3RtcC9sYWItYWJyc3ZtMnNlc3Npb24wOC50eHQKCmRhdGUgPj4gL3RtcC9sYWItYWJyc3ZtMnNlc3Npb24wOC50eHQKCmVjaG8gIltVbml0XSIgPj4gL2V0Yy9zeXN0ZW1kL3N5c3RlbS92ZXJ5LWxhc3Quc2VydmljZQplY2hvICJEZXNjcmlwdGlvbj1WZXJ5IGxhc3Qgc2VydmljZSIgPj4gL2V0Yy9zeXN0ZW1kL3N5c3RlbS92ZXJ5LWxhc3Quc2VydmljZQplY2hvICJBZnRlcj1kZWZhdWx0LnRhcmdldCIgPj4gL2V0Yy9zeXN0ZW1kL3N5c3RlbS92ZXJ5LWxhc3Quc2VydmljZQplY2hvICIgIiA+PiAvZXRjL3N5c3RlbWQvc3lzdGVtL3ZlcnktbGFzdC5zZXJ2aWNlCmVjaG8gIltTZXJ2aWNlXSIgPj4gL2V0Yy9zeXN0ZW1kL3N5c3RlbS92ZXJ5LWxhc3Quc2VydmljZQplY2hvICJUeXBlPW9uZXNob3QiID4+IC9ldGMvc3lzdGVtZC9zeXN0ZW0vdmVyeS1sYXN0LnNlcnZpY2UKZWNobyAiRXhlY1N0YXJ0PS91c3IvbG9jYWwvc2Jpbi92ZXJ5LWxhc3QiID4+IC9ldGMvc3lzdGVtZC9zeXN0ZW0vdmVyeS1sYXN0LnNlcnZpY2UKZWNobyAiICIgPj4gL2V0Yy9zeXN0ZW1kL3N5c3RlbS92ZXJ5LWxhc3Quc2VydmljZQplY2hvICJbSW5zdGFsbF0iID4+IC9ldGMvc3lzdGVtZC9zeXN0ZW0vdmVyeS1sYXN0LnNlcnZpY2UKZWNobyAiV2FudGVkQnk9ZGVmYXVsdC50YXJnZXQiID4+IC9ldGMvc3lzdGVtZC9zeXN0ZW0vdmVyeS1sYXN0LnNlcnZpY2UKCnN5c3RlbWN0bCBkYWVtb24tcmVsb2FkCnN5c3RlbWN0bCBlbmFibGUgdmVyeS1sYXN0CmVjaG8gJyMhL2Jpbi9iYXNoJyA+PiAvdXNyL2xvY2FsL3NiaW4vdmVyeS1sYXN0CmVjaG8gJ3B5dGhvbiAtbSBTaW1wbGVIVFRQU2VydmVyIDgwMDEnID4+IC91c3IvbG9jYWwvc2Jpbi92ZXJ5LWxhc3QKY2htb2QgNzAwIC91c3IvbG9jYWwvc2Jpbi92ZXJ5LWxhc3QKc3lzdGVtY3RsIHN0YXJ0IHZlcnktbGFzdA==",
        "metadata": {
          "description": "base64 content for cloud-init custom data"
        }
      },
      "vmSize": {
        "type": "string",
        "defaultValue": "Standard_B2s",
        "metadata": {
          "description": "Size of the virtual machine"
        }
      },
      "storageAccounts_aztrial_name": {
        "defaultValue": "[concat('stor', uniqueString(resourceGroup().id))]",
        "type": "String"
      }
    },
    "variables": {
      "imagePublisher": "RedHat",
      "imageOffer": "RHEL",
      "imageSku": "7_9",
      "nicNameVM1": "[concat(uniquestring(parameters('vm1Name')), 'nic')]",
      "nicNameVM2": "[concat(uniquestring(parameters('vm2Name')), 'nic')]",
      "addressPrefix": "10.0.0.0/16",
      "subnetName": "Subnet",
      "subnetPrefix": "10.0.0.0/24",
      "publicIPAddressNameVM1": "[concat(uniquestring(parameters('vm1Name')), 'publicip')]",
      "publicIPAddressNameVM2": "[concat(uniquestring(parameters('vm2Name')), 'publicip')]",
      "publicIPAddressType": "Dynamic",
      "virtualNetworkName": "abrsbb03vnet",
      "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]",
      "linuxConfiguration": {
        "disablePasswordAuthentication": true,
        "ssh": {
          "publicKeys": [
            {
              "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
              "keyData": "[parameters('adminPasswordOrKey')]"
            }
          ]
        }
      },
      "networkSecurityGroupName": "default-NSG"
    },
    "resources": [
      {
        "apiVersion": "2020-05-01",
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[variables('publicIPAddressNameVM1')]",
        "location": "[parameters('location')]",
        "properties": {
          "dnsSettings": {
            "domainNameLabel": "[parameters('dnsLabelPrefixVM1')]"
          },
          "publicIPAllocationMethod": "[variables('publicIPAddressType')]"
        }
      },
        {
        "apiVersion": "2020-05-01",
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[variables('publicIPAddressNameVM2')]",
        "location": "[parameters('location')]",
        "properties": {
          "dnsSettings": {
            "domainNameLabel": "[parameters('dnsLabelPrefixVM2')]"
          },
          "publicIPAllocationMethod": "[variables('publicIPAddressType')]"
        }
      },
      {
        "comments": "Default Network Security Group for template",
        "type": "Microsoft.Network/networkSecurityGroups",
        "apiVersion": "2020-05-01",
        "name": "[variables('networkSecurityGroupName')]",
        "location": "[parameters('location')]",
        "properties": {
          "securityRules": [
            {
              "name": "inbound_ssh",
              "properties": {
                "access": "Allow",
                "description": "Inbound SSH access to port 2222 and 22.",
                "destinationAddressPrefix": "VirtualNetwork",
                "destinationAddressPrefixes": [],
                "destinationApplicationSecurityGroups": null,
                "destinationPortRange": "2222",
                "destinationPortRanges": [],
                "direction": "Inbound",
                "priority": 100,
                "Protocol": "TCP",
                "sourceAddressPrefix": "Internet",
                "sourceAddressPrefixes": [],
                "sourceApplicationSecurityGroups": null,
                "sourcePortRange": "*",
                "sourcePortRanges": []
              }
            },
            {
              "name": "CASG-Rule-104",
              "properties": {
                "access": "Deny",
                "description": "CSS Governance Security Rule.  Deny risky inbound.  https://aka.ms/casg",
                "destinationAddressPrefix": "*",
                "destinationAddressPrefixes": [],
                "destinationApplicationSecurityGroups": null,
                "destinationPortRange": null,
                "destinationPortRanges": [
                  "13",
                  "17",
                  "19",
                  "22",
                  "23",
                  "53",
                  "69",
                  "111",
                  "119",
                  "123",
                  "135",
                  "137",
                  "138",
                  "139",
                  "161",
                  "162",
                  "389",
                  "445",
                  "512",
                  "514",
                  "593",
                  "636",
                  "873",
                  "1433",
                  "1434",
                  "1900",
                  "2049",
                  "2301",
                  "2381",
                  "3268",
                  "3306",
                  "3389",
                  "4333",
                  "5353",
                  "5432",
                  "5800",
                  "5900",
                  "5985",
                  "5986",
                  "6379",
                  "7000",
                  "7001",
                  "7199",
                  "9042",
                  "9160",
                  "9300",
                  "11211",
                  "16379",
                  "26379",
                  "27017"
                ],
                "direction": "Inbound",
                "priority": 204,
                "protocol": "*",
                "sourceAddressPrefix": "Internet",
                "sourceAddressPrefixes": [],
                "sourceApplicationSecurityGroups": null,
                "sourcePortRange": "*",
                "sourcePortRanges": []
              }
            },
            {
              "name": "CASG-Rule-103",
              "properties": {
                "access": "Allow",
                "description": "CSS Governance Security Rule.  Allow SAW inbound.  https://aka.ms/casg",
                "destinationAddressPrefix": "*",
                "destinationAddressPrefixes": [],
                "destinationApplicationSecurityGroups": null,
                "destinationPortRange": "*",
                "destinationPortRanges": [],
                "direction": "Inbound",
                "priority": 103,
                "protocol": "*",
                "provisioningState": "Succeeded",
                "sourceAddressPrefix": "CorpNetSaw",
                "sourceAddressPrefixes": [],
                "sourceApplicationSecurityGroups": null,
                "sourcePortRange": "*",
                "sourcePortRanges": []
              }
            },
            {
              "name": "CASG-Rule-101",
              "properties": {
                "access": "Allow",
                "description": "CSS Governance Security Rule.  Allow vnet inbound.  https://aka.ms/casg",
                "destinationAddressPrefix": "*",
                "destinationAddressPrefixes": [],
                "destinationApplicationSecurityGroups": null,
                "destinationPortRange": "*",
                "destinationPortRanges": [],
                "direction": "Inbound",
                "priority": 101,
                "protocol": "*",
                "provisioningState": "Succeeded",
                "sourceAddressPrefix": "VirtualNetwork",
                "sourceAddressPrefixes": [],
                "sourceApplicationSecurityGroups": null,
                "sourcePortRange": "*",
                "sourcePortRanges": []
              }
            },
            {
              "name": "CASG-Rule-102",
              "properties": {
                "access": "Allow",
                "description": "CSS Governance Security Rule.  Allow Corpnet inbound.  https://aka.ms/casg",
                "destinationAddressPrefix": "*",
                "destinationAddressPrefixes": [],
                "destinationApplicationSecurityGroups": null,
                "destinationPortRange": "*",
                "destinationPortRanges": [],
                "direction": "Inbound",
                "priority": 102,
                "protocol": "*",
                "provisioningState": "Succeeded",
                "sourceAddressPrefix": "CorpNetPublic",
                "sourceAddressPrefixes": [],
                "sourceApplicationSecurityGroups": null,
                "sourcePortRange": "*",
                "sourcePortRanges": []
              }
            },
            {
              "name": "inbound_web",
              "properties": {
                "access": "Allow",
                "description": "Inbound HTTP and HTTPS from home.",
                "destinationAddressPrefix": "VirtualNetwork",
                "destinationAddressPrefixes": [],
                "destinationApplicationSecurityGroups": null,
                "destinationPortRange": null,
                "destinationPortRanges": [
                  "8080",
                  "8443"
                ],
                "direction": "Inbound",
                "priority": 104,
                "protocol": "TCP",
                "provisioningState": "Succeeded",
                "sourceAddressPrefix": "Internet",
                "sourceAddressPrefixes": [],
                "sourceApplicationSecurityGroups": null,
                "sourcePortRange": "*",
                "sourcePortRanges": []
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2020-05-01",
        "type": "Microsoft.Network/virtualNetworks",
        "name": "[variables('virtualNetworkName')]",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        ],
        "properties": {
          "addressSpace": {
            "addressPrefixes": [
              "[variables('addressPrefix')]"
            ]
          },
          "subnets": [
            {
              "name": "[variables('subnetName')]",
              "properties": {
                "addressPrefix": "[variables('subnetPrefix')]",
                "networkSecurityGroup": {
                  "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                }
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2020-05-01",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[variables('nicNameVM1')]",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressNameVM1'))]",
          "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "publicIPAddress": {
                  "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressNameVM1'))]"
                },
                "subnet": {
                  "id": "[variables('subnetRef')]"
                }
              }
            }
          ]
        }
      },
          {
        "apiVersion": "2020-05-01",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[variables('nicNameVM2')]",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressNameVM2'))]",
          "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "publicIPAddress": {
                  "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressNameVM2'))]"
                },
                "subnet": {
                  "id": "[variables('subnetRef')]"
                }
              }
            }
          ]
        }
      },
      {
        "apiVersion": "2020-06-01",
        "type": "Microsoft.Compute/virtualMachines",
        "name": "[parameters('vm1Name')]",
        "location": "[parameters('location')]",
        "tags": {
          "Tag1": "ManagedVM"
        },
        "dependsOn": [
          "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicNameVM1'))]"
        ],
        "properties": {
          "hardwareProfile": {
            "vmSize": "[parameters('vmSize')]"
          },
          "osProfile": {
            "adminPassword": "[parameters('adminPasswordOrKey')]",
            "adminUsername": "[parameters('adminUsername')]",
            "computerName": "[parameters('vm1Name')]",
            "customData": "[parameters('customData1')]",
            "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "enabled": true,
              "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', parameters('storageAccounts_aztrial_name'))).primaryEndpoints.blob]"
            }
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "SUSE",
              "offer": "sles-sap-12-sp5",
              "sku": "gen1",
              "version": "2021.09.13"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicNameVM1'))]"
              }
            ]
          }
        }
      },
         {
        "apiVersion": "2020-06-01",
        "type": "Microsoft.Compute/virtualMachines",
        "name": "[parameters('vm2Name')]",
        "location": "[parameters('location')]",
        "tags": {
          "Tag1": "ManagedVM"
        },
        "dependsOn": [
          "[resourceId('Microsoft.Network/networkInterfaces/', variables('nicNameVM2'))]"
        ],
        "properties": {
          "hardwareProfile": {
            "vmSize": "[parameters('vmSize')]"
          },
          "osProfile": {
            "adminPassword": "[parameters('adminPasswordOrKey')]",
            "adminUsername": "[parameters('adminUsername')]",
            "computerName": "[parameters('vm2Name')]",
            "customData": "[parameters('customData2')]",
            "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
          },
          "diagnosticsProfile": {
            "bootDiagnostics": {
              "enabled": true,
              "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', parameters('storageAccounts_aztrial_name'))).primaryEndpoints.blob]"
            }
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "RedHat",
              "offer": "RHEL",
              "sku": "7lvm-gen2",
              "version": "latest"
            }
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicNameVM2'))]"
              }
            ]
          }
        }
      },
      {
        "name": "[parameters('storageAccounts_aztrial_name')]",
        "type": "Microsoft.Storage/storageAccounts",
        "apiVersion": "2019-06-01",
        "tags": {
          "displayName": "[parameters('storageAccounts_aztrial_name')]"
        },
        "location": "[resourceGroup().location]",
        "kind": "StorageV2",
        "sku": {
          "name": "Standard_LRS",
          "tier": "Standard"
        }
      }
    ],
    "outputs": {
      "adminUsername": {
        "type": "string",
        "value": "[parameters('adminUsername')]"
      },
      "hostname VM1": {
        "type": "string",
        "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressNameVM1'))).dnsSettings.fqdn]"
      },
      "hostname VM2": {
        "type": "string",
        "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressNameVM2'))).dnsSettings.fqdn]"
      },
      "sshCommand VM1": {
        "type": "string",
        "value": "[format('ssh {0}@{1} -p 2222', parameters('adminUsername'), reference(resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressNameVM1'))).dnsSettings.fqdn)]"
      },
      "sshCommand VM2": {
        "type": "string",
        "value": "[format('ssh {0}@{1} -p 2222', parameters('adminUsername'), reference(resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressNameVM2'))).dnsSettings.fqdn)]"
      }
    }
  }
